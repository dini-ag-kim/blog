{"version":3,"file":"component---src-pages-index-js-47e2bfdb63e91cbe88d8.js","mappings":"0LAIO,MAAMA,EAAWC,IAAgB,IAAf,MAAEC,GAAOD,EAChC,OACEE,EAAAA,cAAA,MAAIC,MAAO,CAAEC,UAAY,SACtBH,EAAMI,KAAIC,IAAS,IAADC,EAAAC,EACjB,MAAMC,EAAQH,EAAKI,YAAYD,OAASH,EAAKK,OAAOC,KAEpD,OACEV,EAAAA,cAAA,MAAIW,IAAKP,EAAKK,OAAOC,MACnBV,EAAAA,cAAA,WACEY,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAETd,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAIZ,EAAKK,OAAOC,KAAMO,SAAS,OACnCjB,EAAAA,cAAA,QAAMiB,SAAS,YAAYV,KAG/BP,EAAAA,cAAA,aAAQI,EAAKI,YAAYU,OACR,QAAhBb,EAAAD,EAAKI,mBAAW,IAAAH,OAAA,EAAhBA,EAAkBc,UACjBnB,EAAAA,cAAA,aACI,IAAG,IAAG,IACPI,EAAKI,YAAYW,QAAQhB,KAAI,CAACiB,EAAQC,IAEnCrB,EAAAA,cAAA,QAAMW,IAAK,SAAWU,GACnBD,EAAOE,UACN,IACDF,EAAOG,SACPF,EAAQjB,EAAKI,YAAYW,QAAQK,OAAS,EACvC,KACA,QAMG,QAAhBlB,EAAAF,EAAKI,mBAAW,IAAAF,OAAA,EAAhBA,EAAkBmB,OACjBzB,EAAAA,cAAA,aACI,MACDI,EAAKI,YAAYiB,KAAKtB,KAAI,CAACuB,EAAKL,IAAWrB,EAAAA,cAAC2B,EAAAA,EAAG,CAACD,IAAKA,EAAKf,IAAKU,QAItErB,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACE4B,wBAAyB,CACvBC,OAAQzB,EAAKI,YAAYsB,aAAe1B,EAAK2B,SAE/Cd,SAAS,kBAIZ,IAGN,C,6FCzBT,UA3BkBnB,IAAyB,IAADkC,EAAA,IAAvB,KAAEC,EAAI,SAAEC,GAAUpC,EACnC,MAAMqC,GAAkC,QAAtBH,EAAAC,EAAKG,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBzB,QAAU,QAC9CR,EAAQkC,EAAKK,kBAAkBC,MAErC,OAAqB,IAAjBxC,EAAMyB,OAENxB,EAAAA,cAACwC,EAAAA,EAAM,CAACN,SAAUA,EAAU3B,MAAO4B,GACjCnC,EAAAA,cAACyC,EAAAA,EAAG,CAAClC,MAAM,cACXP,EAAAA,cAAC0C,EAAAA,EAAG,MACJ1C,EAAAA,cAAA,SAAG,8JAUPA,EAAAA,cAACwC,EAAAA,EAAM,CAACN,SAAUA,EAAU3B,MAAO4B,GACjCnC,EAAAA,cAACyC,EAAAA,EAAG,CAAClC,MAAM,cACXP,EAAAA,cAAC0C,EAAAA,EAAG,MACJ1C,EAAAA,cAACH,EAAAA,EAAQ,CAACE,MAAOA,IACV,C","sources":["webpack://dini-ag-kim-blog/./src/components/postList.js","webpack://dini-ag-kim-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { Tag } from \"./tag\"\n\nexport const PostList = ({ posts }) => {\n  return (\n    <ol style={{ listStyle: `none` }}>\n      {posts.map(post => {\n        const title = post.frontmatter.title || post.fields.slug\n\n        return (\n          <li key={post.fields.slug}>\n            <article\n              className=\"post-list-item\"\n              itemScope\n              itemType=\"http://schema.org/Article\"\n            >\n              <header>\n                <h2>\n                  <Link to={post.fields.slug} itemProp=\"url\">\n                    <span itemProp=\"headline\">{title}</span>\n                  </Link>\n                </h2>\n                <small>{post.frontmatter.date}</small>\n                {post.frontmatter?.authors && (\n                  <small>\n                    {` `}|{` `}\n                    {post.frontmatter.authors.map((author, index) => {\n                      return (\n                        <span key={\"author\" + index}>\n                          {author.firstname}\n                          {` `}\n                          {author.lastname}\n                          {index < post.frontmatter.authors.length - 1\n                            ? \",\\u00A0\"\n                            : \"\"}\n                        </span>\n                      )\n                    })}\n                  </small>\n                )}\n                {post.frontmatter?.tags && (\n                  <small>\n                    {` | `}\n                    {post.frontmatter.tags.map((tag, index) => (<Tag tag={tag} key={index} />))}\n                  </small>\n                )}\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: post.frontmatter.description || post.excerpt,\n                  }}\n                  itemProp=\"description\"\n                />\n              </section>\n            </article>\n          </li>\n        )\n      })}\n    </ol>\n  )\n}\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { PostList } from \"../components/postList\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      <PostList posts={posts} />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: {date: DESC }}) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          authors {\n            lastname\n            firstname\n          }\n          tags\n        }\n      }\n    }\n  }\n`\n"],"names":["PostList","_ref","posts","React","style","listStyle","map","post","_post$frontmatter","_post$frontmatter2","title","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","authors","author","index","firstname","lastname","length","tags","tag","Tag","dangerouslySetInnerHTML","__html","description","excerpt","_data$site$siteMetada","data","location","siteTitle","site","siteMetadata","allMarkdownRemark","nodes","Layout","SEO","Bio"],"sourceRoot":""}