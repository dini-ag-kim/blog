{"version":3,"file":"component---src-templates-blog-index-js-b93ac00b43c92f39d751.js","mappings":"yHACO,SAASA,EAAcC,GAC5B,IAAIC,EAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC9BD,EAAOD,EAAII,WAAWF,KAAOD,GAAQ,GAAKA,GAE5C,IAAII,EAAQ,IACZ,IAAK,IAAIH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1BG,IAAU,MADGJ,GAAa,EAAJC,EAAU,KACTI,SAAS,KAAKC,QAAQ,EAC/C,CACA,OAAOF,CACT,C,uHCRO,MAAMG,EAAWC,IAAgB,IAAf,MAAEC,GAAOD,EAChC,OACEE,EAAAA,cAAA,MAAIC,MAAO,CAAEC,UAAY,SACtBH,EAAMI,KAAIC,IAAS,IAADC,EAAAC,EACjB,MAAMC,EAAQH,EAAKI,YAAYD,OAASH,EAAKK,OAAOC,KAEpD,OACEV,EAAAA,cAAA,MAAIW,IAAKP,EAAKK,OAAOC,MACnBV,EAAAA,cAAA,WACEY,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAETd,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAIZ,EAAKK,OAAOC,KAAMO,SAAS,OACnCjB,EAAAA,cAAA,QAAMiB,SAAS,YAAYV,KAG/BP,EAAAA,cAAA,aAAQI,EAAKI,YAAYU,OACR,QAAhBb,EAAAD,EAAKI,mBAAW,IAAAH,OAAA,EAAhBA,EAAkBc,UACjBnB,EAAAA,cAAA,aACI,IAAG,IAAG,IACPI,EAAKI,YAAYW,QAAQhB,KAAI,CAACiB,EAAQC,IAEnCrB,EAAAA,cAAA,QAAMW,IAAK,SAAWU,GACnBD,EAAOE,UACN,IACDF,EAAOG,SACPF,EAAQjB,EAAKI,YAAYW,QAAQ3B,OAAS,EACvC,KACA,QAMG,QAAhBc,EAAAF,EAAKI,mBAAW,IAAAF,OAAA,EAAhBA,EAAkBkB,OACjBxB,EAAAA,cAAA,aACI,MACDI,EAAKI,YAAYgB,KAAKrB,KAAI,CAACsB,EAAKJ,IAAWrB,EAAAA,cAAC0B,EAAAA,EAAG,CAACD,IAAKA,EAAKd,IAAKU,QAItErB,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACE2B,wBAAyB,CACvBC,OAAQxB,EAAKI,YAAYqB,aAAezB,EAAK0B,SAE/Cb,SAAS,kBAIZ,IAGN,C,yFCxDF,MAAMS,EAAM5B,IAAc,IAAb,IAAE2B,GAAK3B,EACzB,OACEE,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAI,QAAUS,EAAKxB,MAAO,CAAE8B,iBAAiB3C,EAAAA,EAAAA,GAAcqC,IAAQb,UAAU,QAChFa,EACI,C,mFCuBX,UAvBkB3B,IAAsC,IAADkC,EAAA,IAApC,KAAEC,EAAI,YAAEC,EAAW,SAAEC,GAAUrC,EAChD,MAAMsC,GAAkC,QAAtBJ,EAAAC,EAAKI,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBzB,QAAU,QAC9CR,EAAQmC,EAAYnC,MAE1B,OAAqB,IAAjBA,EAAMP,OAENQ,EAAAA,cAAA,SAAG,6JASLA,EAAAA,cAACuC,EAAAA,EAAM,CAACJ,SAAUA,EAAU5B,MAAO6B,GACjCpC,EAAAA,cAACwC,EAAAA,EAAG,CAACjC,MAAQ,yBAAwB2B,EAAYT,QACjDzB,EAAAA,cAAA,SAAG,sBAAmBA,EAAAA,cAAA,QAAMY,UAAU,OAAOX,MAAO,CAAE8B,iBAAiB3C,EAAAA,EAAAA,GAAc8C,EAAYT,OAASS,EAAYT,MACtHzB,EAAAA,cAACH,EAAAA,EAAQ,CAACE,MAAOA,IACV,C","sources":["webpack://dini-ag-kim-blog/./src/common.js","webpack://dini-ag-kim-blog/./src/components/postList.js","webpack://dini-ag-kim-blog/./src/components/tag.js","webpack://dini-ag-kim-blog/./src/templates/blogIndex.js"],"sourcesContent":["\nexport function stringToColor(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  let color = '#';\n  for (let i = 0; i < 3; i++) {\n    let value = (hash >> (i * 8)) & 0xFF;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n  return color;\n}\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { Tag } from \"./tag\"\n\nexport const PostList = ({ posts }) => {\n  return (\n    <ol style={{ listStyle: `none` }}>\n      {posts.map(post => {\n        const title = post.frontmatter.title || post.fields.slug\n\n        return (\n          <li key={post.fields.slug}>\n            <article\n              className=\"post-list-item\"\n              itemScope\n              itemType=\"http://schema.org/Article\"\n            >\n              <header>\n                <h2>\n                  <Link to={post.fields.slug} itemProp=\"url\">\n                    <span itemProp=\"headline\">{title}</span>\n                  </Link>\n                </h2>\n                <small>{post.frontmatter.date}</small>\n                {post.frontmatter?.authors && (\n                  <small>\n                    {` `}|{` `}\n                    {post.frontmatter.authors.map((author, index) => {\n                      return (\n                        <span key={\"author\" + index}>\n                          {author.firstname}\n                          {` `}\n                          {author.lastname}\n                          {index < post.frontmatter.authors.length - 1\n                            ? \",\\u00A0\"\n                            : \"\"}\n                        </span>\n                      )\n                    })}\n                  </small>\n                )}\n                {post.frontmatter?.tags && (\n                  <small>\n                    {` | `}\n                    {post.frontmatter.tags.map((tag, index) => (<Tag tag={tag} key={index} />))}\n                  </small>\n                )}\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: post.frontmatter.description || post.excerpt,\n                  }}\n                  itemProp=\"description\"\n                />\n              </section>\n            </article>\n          </li>\n        )\n      })}\n    </ol>\n  )\n}\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { stringToColor } from \"../common\"\n\nexport const Tag = ({ tag }) => {\n  return (\n    <Link to={\"/tag/\" + tag} style={{ backgroundColor: stringToColor(tag) }} className=\"chip\">\n      {tag}\n    </Link>\n  )\n}\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { PostList } from \"../components/postList\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { stringToColor } from \"../common\"\n\nconst BlogIndex = ({ data, pageContext, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = pageContext.posts\n\n  if (posts.length === 0) {\n    return (\n      <p>\n        No blog posts found. Add markdown posts to \"content/blog\" (or the\n        directory you specified for the \"gatsby-source-filesystem\" plugin in\n        gatsby-config.js).\n      </p>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title={`All posts tagged with ${pageContext.tag}`} />\n      <p>Alle Posts mit Tag <span className=\"chip\" style={{ backgroundColor: stringToColor(pageContext.tag) }}>{pageContext.tag}</span></p>\n      <PostList posts={posts} />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\n"],"names":["stringToColor","str","hash","i","length","charCodeAt","color","toString","substr","PostList","_ref","posts","React","style","listStyle","map","post","_post$frontmatter","_post$frontmatter2","title","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","authors","author","index","firstname","lastname","tags","tag","Tag","dangerouslySetInnerHTML","__html","description","excerpt","backgroundColor","_data$site$siteMetada","data","pageContext","location","siteTitle","site","siteMetadata","Layout","SEO"],"sourceRoot":""}